# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from PostgreSQLighter import SQLighter
import random
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from settings import *
from private_data import TOKEN_TG


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
bot = Bot(token=TOKEN_TG)
dp = Dispatcher(bot)
# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–¥
db = SQLighter('it_fest.db')


async def callback(query: types.CallbackQuery):
    if isinstance(query, types.CallbackQuery): # –ï—Å–ª–∏ –Ω–∞ –≤—Ö–æ–¥ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç CallbackQuery
        # –ß—Ç–æ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –∫–æ–ª–±–µ–∫ –∫–Ω–æ–ø–∫–µ
        data = query.data
        user_id = query.from_user.id
        
        # –ï—Å–ª–∏ –¥–∞—Ç–∞ = –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
        if data == 'information':
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await bot.send_message(query.from_user.id, text='–Ø - –±–æ—Ç. –°–æ–∑–¥–∞–Ω —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–≥–æ –§–µ—Å—Ç–∏–≤–∞–ª—è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–π! –°–ª—É–∂—É –¥–ª—è –æ–ø–æ–≤–µ—â–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö. –ú–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –º–æ–∏ –∫–æ–º–º–∞–Ω–¥—ã –≤ /help')
            await bot.send_message(query.from_user.id, text='''
–ê –µ—Å–ª–∏ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —Ç–æ
ü§°–ú–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: –ö–∏—Ä–∏–ª–ª –ê—Ä–∑–∞–º–∞—Å—Ü–µ–≤
üßë‚ÄçüíªGitHub: https://github.com/nickname123456
üí¨–í–∫: https://vk.com/kirillarz
üéÆ–î—Å: CoalNavl#0043
        ''')
        
        # –ï—Å–ª–∏ –¥–∞—Ç–∞ = –ø–æ–¥–ø–∏—Å–∫–∏:
        elif data == 'subscriptions':
            subscriptions_kb =InlineKeyboardMarkup(row_width=4)

            # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –∏–≤–µ–Ω—Ç—ã
            events = db.get_all_from_events()
            for event in events:
                if user_id in eval(event[5]): # –ï—Å–ª–∏ —é–∑–µ—Ä –ø–æ–¥–ø–∏—Å–∞–Ω
                    subscriptions_kb.insert(InlineKeyboardButton(f'{event[0]}', callback_data=f'info_{event[0]}')) # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É
            # –ï—Å–ª–∏ –∏–≤–µ–Ω—Ç—ã –µ—Å—Ç—å
            if len(subscriptions_kb.inline_keyboard) > 0:
                await bot.send_message(query.from_user.id, text='‚úÖ'+random.choice(text_subscriptions), reply_markup=subscriptions_kb)
            else: # –ï—Å–ª–∏ –∏–≤–µ–Ω—Ç–æ–≤ –Ω–µ—Ç
                subscriptions_kb.insert(InlineKeyboardButton('üîì–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', callback_data='available_events'))
                await bot.send_message(query.from_user.id, text='‚ùå–¢—ã –Ω–∏ –Ω–∞ —á—Ç–æ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω.', reply_markup=subscriptions_kb)
        
        # –ï—Å–ª–∏ –¥–∞—Ç–∞ = –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≤–µ–Ω—Ç—ã
        elif data == 'available_events':
            subscriptions_kb =InlineKeyboardMarkup(row_width=4)

            # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –∏–≤–µ–Ω—Ç—ã
            events = db.get_all_from_events()
            for event in events:
                subscriptions_kb.insert(InlineKeyboardButton(f'{event[0]}', callback_data=f'info_{event[0]}')) # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É

            await bot.send_message(query.from_user.id, text='üîì'+random.choice(text_available_events), reply_markup=subscriptions_kb)




    elif isinstance(query, types.Message): # –ï—Å–ª–∏ –Ω–∞ –≤—Ö–æ–¥ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç Message
        user_id = query.from_user.id
        text = query.text
        
        # –ï—Å–ª–∏ –¥–∞—Ç–∞ = –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
        if text == '‚Ñπ–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await bot.send_message(query.from_user.id, text='–Ø - –±–æ—Ç. –°–æ–∑–¥–∞–Ω —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–≥–æ –§–µ—Å—Ç–∏–≤–∞–ª—è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–π! –°–ª—É–∂—É –¥–ª—è –æ–ø–æ–≤–µ—â–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö. –ú–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –º–æ–∏ –∫–æ–º–º–∞–Ω–¥—ã –≤ /help')
            await bot.send_message(query.from_user.id, text='''
–ê –µ—Å–ª–∏ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —Ç–æ
ü§°–ú–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: –ö–∏—Ä–∏–ª–ª –ê—Ä–∑–∞–º–∞—Å—Ü–µ–≤
üßë‚ÄçüíªGitHub: https://github.com/nickname123456
üí¨–í–∫: https://vk.com/kirillarz
üéÆ–î—Å: CoalNavl#0043
        ''')
        
        # –ï—Å–ª–∏ –¥–∞—Ç–∞ = –ø–æ–¥–ø–∏—Å–∫–∏:
        elif text == '‚úî–ü–æ–¥–ø–∏—Å–∫–∏':
            subscriptions_kb =InlineKeyboardMarkup(row_width=4)

            # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –∏–≤–µ–Ω—Ç—ã
            events = db.get_all_from_events()
            for event in events:
                if user_id in eval(event[5]): # –ï—Å–ª–∏ —é–∑–µ—Ä –ø–æ–¥–ø–∏—Å–∞–Ω
                    subscriptions_kb.insert(InlineKeyboardButton(f'{event[0]}', callback_data=f'info_{event[0]}')) # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É
            # –ï—Å–ª–∏ –∏–≤–µ–Ω—Ç—ã –µ—Å—Ç—å
            if len(subscriptions_kb.inline_keyboard) > 0:
                await bot.send_message(query.from_user.id, text='‚úÖ'+random.choice(text_subscriptions), reply_markup=subscriptions_kb)
            else: # –ï—Å–ª–∏ –∏–≤–µ–Ω—Ç–æ–≤ –Ω–µ—Ç
                subscriptions_kb.insert(InlineKeyboardButton('üîì–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', callback_data='available_events'))
                await bot.send_message(query.from_user.id, text='‚ùå–¢—ã –Ω–∏ –Ω–∞ —á—Ç–æ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω.', reply_markup=subscriptions_kb)
        
        # –ï—Å–ª–∏ –¥–∞—Ç–∞ = –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≤–µ–Ω—Ç—ã
        elif text == 'üîì–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è':
            subscriptions_kb =InlineKeyboardMarkup(row_width=4)

            # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –∏–≤–µ–Ω—Ç—ã
            events = db.get_all_from_events()
            for event in events:
                subscriptions_kb.insert(InlineKeyboardButton(f'{event[0]}', callback_data=f'info_{event[0]}')) # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É

            await bot.send_message(query.from_user.id, text='üîì'+random.choice(text_available_events), reply_markup=subscriptions_kb)